name: Check for New YandexMusicModPatcher Releases

on:
  workflow_dispatch:
  schedule:
    - cron: '0 */1 * * *'

jobs:
  check-for-updates:
    runs-on: ubuntu-latest
    outputs:
      needs_build: ${{ steps.check_versions.outputs.needs_build }}
      latest_version: ${{ steps.check_versions.outputs.latest_version }}
      
    steps:
      - name: Получить информацию о последнем релизе оригинального репозитория
        id: get_original_release
        run: |
          ORIGINAL_RELEASE=$(curl -s https://api.github.com/repos/TheKing-OfTime/YandexMusicModPatcher/releases/latest)
          ORIGINAL_VERSION=$(echo $ORIGINAL_RELEASE | jq -r .tag_name)
          echo "Оригинальная версия: $ORIGINAL_VERSION"
          echo "original_version=$ORIGINAL_VERSION" >> $GITHUB_OUTPUT

      - name: Получить информацию о последнем релизе в нашем репозитории
        id: get_our_release
        run: |
          OUR_RELEASES=$(curl -s https://api.github.com/repos/${{ github.repository }}/releases)
          if [ "$(echo $OUR_RELEASES | jq length)" -gt 0 ]; then
            OUR_VERSION=$(echo $OUR_RELEASES | jq -r '.[0].tag_name' | sed 's/^mod-//')
            echo "Наша последняя версия: $OUR_VERSION"
            echo "our_version=$OUR_VERSION" >> $GITHUB_OUTPUT
          else
            echo "В репозитории нет релизов"
            echo "our_version=none" >> $GITHUB_OUTPUT
          fi

      - name: Сравнить версии и решить о необходимости сборки
        id: check_versions
        run: |
          ORIGINAL="${{ steps.get_original_release.outputs.original_version }}"
          OUR="${{ steps.get_our_release.outputs.our_version }}"
          
          NEEDS_BUILD="true"
          
          if [ "$OUR" != "none" ] && [ "$ORIGINAL" = "$OUR" ]; then
            echo "Версии совпадают: $ORIGINAL. Сборка не требуется."
            NEEDS_BUILD="false"
          else
            echo "Нужна сборка новой версии: $ORIGINAL"
          fi
          
          echo "needs_build=$NEEDS_BUILD" >> $GITHUB_OUTPUT
          echo "latest_version=$ORIGINAL" >> $GITHUB_OUTPUT

  build-if-needed:
    needs: check-for-updates
    if: needs.check-for-updates.outputs.needs_build == 'true'
    uses: ./.github/workflows/build_release.yml
    with:
      version: ${{ needs.check-for-updates.outputs.latest_version }}
